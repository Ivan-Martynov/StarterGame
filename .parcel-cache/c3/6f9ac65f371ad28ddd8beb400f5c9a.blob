var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "EndScene", function () {
  return EndScene;
});
var _pixiJs = require("pixi.js");
var _classesGameController = require("../classes/GameController");
var _classesSceneBase = require("../classes/SceneBase");
var _helpersConstants = require("../helpers/Constants");
var _utilsTypes = require("../utils/types");
class EndScene extends _classesSceneBase.SceneBase {
  constructor() {
    super();
    this._background = new _pixiJs.Sprite(_pixiJs.Texture.WHITE);
    this._background.tint = _utilsTypes.SolarizedColor.BASE0;
    this._background.width = _helpersConstants.Constants.ViewWidth;
    this._background.height = _helpersConstants.Constants.ViewHeight;
    this.addChild(this._background);
    this._gameEndText = new _pixiJs.Text('The End', new _pixiJs.TextStyle({
      fontWeight: 'bolder',
      fontSize: 36,
      fill: _utilsTypes.SolarizedColor.BASE02
    }));
    this._gameEndText.anchor.set(0.5);
    this.addChild(this._gameEndText);
    this._createButton();
  }
  _createButton() {
    this._buttonContainer = new _pixiJs.Container();
    this.addChild(this._buttonContainer);
    this._box = new _pixiJs.Sprite(_pixiJs.Texture.WHITE);
    this._box.tint = _utilsTypes.SolarizedColor.VIOLET;
    this._box.width = 250;
    this._box.height = 50;
    this._box.anchor.set(0.5);
    this._box.interactive = true;
    this._box.buttonMode = true;
    this._box.on('pointerdown', this._switchToScene);
    this._buttonContainer.addChild(this._box);
    this._text = new _pixiJs.Text('To main menu', new _pixiJs.TextStyle({
      fontWeight: 'bold',
      fontSize: 32,
      fill: _utilsTypes.SolarizedColor.BASE02
    }));
    this._text.anchor.set(0.5);
    this._buttonContainer.addChild(this._text);
    this._buttonContainer.position.set(_helpersConstants.Constants.ViewWidth / 2, _helpersConstants.Constants.ViewHeight / 2 - this._box.height);
  }
  load() {
    super.load();
  }
  _switchToScene() {
    _classesGameController.GameController.getInstance().reset();
  }
  resize(isPortrait, width, height, scale) {
    super.resize(isPortrait, width, height, scale);
    const w = this.bottomRight.x - this.topLeft.x;
    const h = this.bottomRight.y - this.topLeft.y;
    const middleX = w / 2;
    const middleY = h / 2;
    this._background.width = w;
    this._background.height = h;
    this._gameEndText.position.set(middleX, middleY - this._gameEndText.height);
    this._buttonContainer.position.set(middleX, middleY + this._box.height);
  }
}
